// Licensed to Shingo Omura under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Shingo Omura licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CalculatedThreshold) DeepCopyInto(out *CalculatedThreshold) {
	*out = *in
	in.Threshold.DeepCopyInto(&out.Threshold)
	in.CalculatedAt.DeepCopyInto(&out.CalculatedAt)
	if in.Messages != nil {
		in, out := &in.Messages, &out.Messages
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CalculatedThreshold.
func (in *CalculatedThreshold) DeepCopy() *CalculatedThreshold {
	if in == nil {
		return nil
	}
	out := new(CalculatedThreshold)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterThrottle) DeepCopyInto(out *ClusterThrottle) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterThrottle.
func (in *ClusterThrottle) DeepCopy() *ClusterThrottle {
	if in == nil {
		return nil
	}
	out := new(ClusterThrottle)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterThrottle) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterThrottleList) DeepCopyInto(out *ClusterThrottleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterThrottle, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterThrottleList.
func (in *ClusterThrottleList) DeepCopy() *ClusterThrottleList {
	if in == nil {
		return nil
	}
	out := new(ClusterThrottleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterThrottleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterThrottleSelector) DeepCopyInto(out *ClusterThrottleSelector) {
	*out = *in
	if in.SelecterTerms != nil {
		in, out := &in.SelecterTerms, &out.SelecterTerms
		*out = make([]ClusterThrottleSelectorTerm, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterThrottleSelector.
func (in *ClusterThrottleSelector) DeepCopy() *ClusterThrottleSelector {
	if in == nil {
		return nil
	}
	out := new(ClusterThrottleSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterThrottleSelectorTerm) DeepCopyInto(out *ClusterThrottleSelectorTerm) {
	*out = *in
	in.ThrottleSelectorTerm.DeepCopyInto(&out.ThrottleSelectorTerm)
	in.NamespaceSelector.DeepCopyInto(&out.NamespaceSelector)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterThrottleSelectorTerm.
func (in *ClusterThrottleSelectorTerm) DeepCopy() *ClusterThrottleSelectorTerm {
	if in == nil {
		return nil
	}
	out := new(ClusterThrottleSelectorTerm)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterThrottleSpec) DeepCopyInto(out *ClusterThrottleSpec) {
	*out = *in
	in.ThrottleSpecBase.DeepCopyInto(&out.ThrottleSpecBase)
	in.Selector.DeepCopyInto(&out.Selector)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterThrottleSpec.
func (in *ClusterThrottleSpec) DeepCopy() *ClusterThrottleSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterThrottleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IsResourceAmountThrottled) DeepCopyInto(out *IsResourceAmountThrottled) {
	*out = *in
	out.ResourceCounts = in.ResourceCounts
	if in.ResourceRequests != nil {
		in, out := &in.ResourceRequests, &out.ResourceRequests
		*out = make(map[v1.ResourceName]bool, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IsResourceAmountThrottled.
func (in *IsResourceAmountThrottled) DeepCopy() *IsResourceAmountThrottled {
	if in == nil {
		return nil
	}
	out := new(IsResourceAmountThrottled)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IsResourceCountThrottled) DeepCopyInto(out *IsResourceCountThrottled) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IsResourceCountThrottled.
func (in *IsResourceCountThrottled) DeepCopy() *IsResourceCountThrottled {
	if in == nil {
		return nil
	}
	out := new(IsResourceCountThrottled)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceAmount) DeepCopyInto(out *ResourceAmount) {
	*out = *in
	if in.ResourceCounts != nil {
		in, out := &in.ResourceCounts, &out.ResourceCounts
		*out = new(ResourceCounts)
		**out = **in
	}
	if in.ResourceRequests != nil {
		in, out := &in.ResourceRequests, &out.ResourceRequests
		*out = make(v1.ResourceList, len(*in))
		for key, val := range *in {
			(*out)[key] = val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceAmount.
func (in *ResourceAmount) DeepCopy() *ResourceAmount {
	if in == nil {
		return nil
	}
	out := new(ResourceAmount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceCounts) DeepCopyInto(out *ResourceCounts) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceCounts.
func (in *ResourceCounts) DeepCopy() *ResourceCounts {
	if in == nil {
		return nil
	}
	out := new(ResourceCounts)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemporaryThresholdOverride) DeepCopyInto(out *TemporaryThresholdOverride) {
	*out = *in
	in.Threshold.DeepCopyInto(&out.Threshold)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemporaryThresholdOverride.
func (in *TemporaryThresholdOverride) DeepCopy() *TemporaryThresholdOverride {
	if in == nil {
		return nil
	}
	out := new(TemporaryThresholdOverride)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Throttle) DeepCopyInto(out *Throttle) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Throttle.
func (in *Throttle) DeepCopy() *Throttle {
	if in == nil {
		return nil
	}
	out := new(Throttle)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Throttle) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThrottleList) DeepCopyInto(out *ThrottleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Throttle, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThrottleList.
func (in *ThrottleList) DeepCopy() *ThrottleList {
	if in == nil {
		return nil
	}
	out := new(ThrottleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ThrottleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThrottleSelector) DeepCopyInto(out *ThrottleSelector) {
	*out = *in
	if in.SelecterTerms != nil {
		in, out := &in.SelecterTerms, &out.SelecterTerms
		*out = make([]ThrottleSelectorTerm, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThrottleSelector.
func (in *ThrottleSelector) DeepCopy() *ThrottleSelector {
	if in == nil {
		return nil
	}
	out := new(ThrottleSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThrottleSelectorTerm) DeepCopyInto(out *ThrottleSelectorTerm) {
	*out = *in
	in.PodSelector.DeepCopyInto(&out.PodSelector)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThrottleSelectorTerm.
func (in *ThrottleSelectorTerm) DeepCopy() *ThrottleSelectorTerm {
	if in == nil {
		return nil
	}
	out := new(ThrottleSelectorTerm)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThrottleSpec) DeepCopyInto(out *ThrottleSpec) {
	*out = *in
	in.ThrottleSpecBase.DeepCopyInto(&out.ThrottleSpecBase)
	in.Selector.DeepCopyInto(&out.Selector)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThrottleSpec.
func (in *ThrottleSpec) DeepCopy() *ThrottleSpec {
	if in == nil {
		return nil
	}
	out := new(ThrottleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThrottleSpecBase) DeepCopyInto(out *ThrottleSpecBase) {
	*out = *in
	in.Threshold.DeepCopyInto(&out.Threshold)
	if in.TemporaryThresholdOverrides != nil {
		in, out := &in.TemporaryThresholdOverrides, &out.TemporaryThresholdOverrides
		*out = make([]TemporaryThresholdOverride, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThrottleSpecBase.
func (in *ThrottleSpecBase) DeepCopy() *ThrottleSpecBase {
	if in == nil {
		return nil
	}
	out := new(ThrottleSpecBase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThrottleStatus) DeepCopyInto(out *ThrottleStatus) {
	*out = *in
	in.CalculatedThreshold.DeepCopyInto(&out.CalculatedThreshold)
	in.Throttled.DeepCopyInto(&out.Throttled)
	in.Used.DeepCopyInto(&out.Used)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThrottleStatus.
func (in *ThrottleStatus) DeepCopy() *ThrottleStatus {
	if in == nil {
		return nil
	}
	out := new(ThrottleStatus)
	in.DeepCopyInto(out)
	return out
}
