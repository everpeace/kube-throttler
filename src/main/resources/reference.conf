kube-throttler {
  # throttler name, the throttler instance is responsible for 'Throttle's with spec.throttleName equals to the name
  throttler-name = null
  # target scheduler names, the throttler instance only counts running pods which is responsible for this scheduler names.
  target-scheduler-names = null

  # in bytes
  watch-buffer-size = 10000
  graceful-shutdown-duration = 30 s

  reconcile-temporary-threshold-overrides-interval = 5 s
  status-force-update-interval = 15 m

  ask-timeout = 10 s
  host = "0.0.0.0"
  port = 4321
}

skuber {
  akka {
    # The ID of the dispatcher to use by Skuber. If undefined or empty the default Akka dispatcher is used.
    dispatcher = ""
  }

  watch {
    # The idle timeout duration for any connections used by skuber `watch` requests - if null the timeout is infinite.
    idle-timeout = null
  }

  watch-continuously {
    # Timeout that is passed to the kubernetes cluster for all list/watch calls. This limits the duration of the call,
    # regardless of any activity or inactivity.
    request-timeout = 1800s

    # The idle timeout for the connection before if closes due to inactivity. The idle-timeout must be a great value
    # than that used for timeout-seconds.
    idle-timeout = 3600s

    # The idle timeout for the connection pool used by the Watch Source (each source has its own connection pool).
    # When the pool is no longer used by the source and the idle time has been exceeded the pool will shutdown and
    # reclaim the unused resources.
    pool-idle-timeout = 7200s
  }
}

kamon.util.filters {
  "akka.tracked-actor" {
    includes = [ "kube-throttler/user/**"]
    excludes = [ "kube-throttler/system/**" ]
  }
  "akka.tracked-dispatcher" {
    includes = [ "kube-throttler/akka.actor.default-dispatcher" ]
  }
  "akka.tracked-router" {
    includes = [ "kube-throttler/user/**" ]
  }
}
